name: Release to Maven Central

on:
  push:
    branches:
      - master

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: MAVEN

    steps:
      # 1️⃣ Checkout code
      - name: Checkout
        uses: actions/checkout@v3

      # 2️⃣ Setup JDK
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 3️⃣ Setup Gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # 4️⃣ Determine next version
      - name: Calculate next version
        id: version
        run: |
          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Remove 'v' prefix and increment patch
          VERSION_NUM=${LATEST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NUM"
          PATCH=$((PATCH+1))
          NEXT_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "Next version: $NEXT_VERSION"

          # Save to GitHub Actions output
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      # 5️⃣ Update gradle.properties
      - name: Update gradle.properties
        run: |
          sed -i "s/^maven=.*/maven=${{ steps.version.outputs.next_version }}/" gradle.properties
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # Only commit if there are changes
          if ! git diff --quiet; then
            git add gradle.properties
            git commit -m "chore: bump version to ${{ steps.version.outputs.next_version }}"
            git push origin master
          else
            echo "No changes to commit"
          fi

      # 6️⃣ Create new Git tag
      - name: Create Git Tag
        run: |
          NEW_TAG="v${{ steps.version.outputs.next_version }}"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      # 7️⃣ Publish to Maven Central
      - name: Publish to Sonatype
        run: ./gradlew publishAllPublicationsToMavenCentralRepository
        env:
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY_CONTENTS }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

      # 8️⃣ Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.next_version }}
          tag_name: v${{ steps.version.outputs.next_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}